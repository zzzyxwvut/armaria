### TAKEN FROM log4j-users-guide.pdf v2.9.0 2017-08-26. ###
### See op. cit. 5.1.5.7 Configuration with Properties. ###


# Internal Configuration {{{1

# 5.1.5. Configuration Syntax.
# The level of internal log4j events that should be logged to `dest'.
status		= info
# Either `err'->stderr or a filepath or a URL.
dest		= err
# The name of the configuration.
name		= PropertiesConfig

# 11.1. Filters.
# Context-wide filters; events rejected at this point will not be passed
# to loggers for further processing: viz. Context Filters -> Logger Filters &
# Logger's Log Level -> Appender Filters -> Appender Reference Filters
#
# 11.1.10. ThresholdFilter.
# When LogEvent matches threshold.level, or it is more specific,
# return onMatch	(ACCEPT, DENY, NEUTRAL=default); else
# return onMisMatch	(ACCEPT, DENY=default, NEUTRAL)
#
# e.g. if level == debug, (see 2.1.1.5 LoggerConfig to learn about Levels)
#	then DENY	(all, trace);
#	else NEUTRAL	(debug, info, warn, error, fatal, off).
#
filters			= threshold
filter.threshold.type	= ThresholdFilter
filter.threshold.level	= debug
#filter.threshold.onMatch = NEUTRAL
#filter.threshold.onMisMatch = DENY

# Local Properties {{{1

property.baseName	= armaria

# 5.1.6. Property substitution.
#
# 8.1.7 Log4j Configuration Location Lookup.
# Write logs to: WEB-INF/logs, if resources/log4j2.properties (this file)
# is _deployed_ under WEB-INF/classes.
#property.dirName	= ${log4j:configParentLocation}/../logs
#
# 6 & 8.1.13. Web Lookup.
# Write logs to: WEB-INF/logs, if resources/log4j2.properties (this file)
# is _deployed_ under / of whatever/WEB-INF/lib/project-logging.jar
#
# The ${web:} expansion that follows requires the log4j-web module; also
# consider removing in the conf/catalina.properties file the `log4j*.jar'
# entry of tomcat.util.scan.StandardJarScanFilter.jarsToSkip, _or_ overriding
# the above entry later in tomcat.util.scan.StandardJarScanFilter.jarsToScan.
#property.dirName	= ${web:rootDir}/WEB-INF/logs
# Write logs to, e.g. /tmp/$USER/logs
#property.dirName	= ${sys:java.io.tmpdir}/${sys:user.name}/logs
property.dirName	= ${sys:user.home}/.${baseName}
property.debugName	= ${dirName}/debug.log
property.errorName	= ${dirName}/error.log

# Use these file permissions: (owner: (r)ead, (w)rite[, e(x)ecute]; group: read; other: none)
property.permissions	= rw-r-----
# Output: %date %level (e.g. IN, WA, but Error) %Class [%thread] %message %exception%newline
property.pattern	= %d %level{ERROR=Error, length=2} %C [%t] %m %ex{full}%n

# Appenders {{{1

appenders	= console, debug, error

# Console {{{2
# 9.1.3. ConsoleAppender.
appender.console.type			= Console
# The name of the Appender.
appender.console.name			= STDOUT
# The target stream (default).
appender.console.target			= SYSTEM_OUT
appender.console.layout.type		= PatternLayout
# Output %time %level %x.y.z.logger [%thread] %message %exception%newline. See 10.1.5.
# Note: %highlight{} requires ANSI console support.
appender.console.layout.pattern		= %d{ABSOLUTE} %highlight{%level{ERROR=Error, length=2}} %C{1.} [%t] %m %ex{full}%n
# Write directly to java.io.FileDescriptor [since v. 2.6.2+]
appender.console.direct			= true
# Honour reassignments via System.set{Out,Err}.
#appender.console.follow		= true
# Propagate exceptions.
#appender.console.ignoreExceptions	= false
appender.console.filter.threshold.type	= ThresholdFilter
appender.console.filter.threshold.level	= info

# Debug {{{2
# 9.1.17. RollingFileAppender.
appender.debug.type			= RollingFile
# The name of the Appender.
appender.debug.name			= DebugFile
# The name of the logfile.
appender.debug.fileName			= ${debugName}
# Append to the end of the logfile.
appender.debug.append			= true
# Buffer up to 8 KiB with immediateFlush.
appender.debug.bufferedIO		= true
# The pattern for the archived logfile(s); devolve making directories.
appender.debug.filePattern		= ${dirName}/debug.log.%i.gz
appender.debug.filePermissions		= ${permissions}
appender.debug.layout.type		= PatternLayout
appender.debug.layout.pattern		= ${pattern}
appender.debug.policies.type		= Policies
appender.debug.filter.threshold.type	= ThresholdFilter
appender.debug.filter.threshold.level	= error
# NEUTRAL (all, trace, debug, info, warn); DENY (error, fatal, off).
appender.debug.filter.threshold.onMatch	= DENY
appender.debug.filter.threshold.onMisMatch = NEUTRAL

# 9.1.17.1 Triggering Policies. Requires %d in filePattern.
#appender.debug.policies.time.type	= TimeBasedTriggeringPolicy
# Granularity of a rollover: e.g. for %d{HH-mm} every _count_ minutes.
#appender.debug.policies.time.interval	= 2
# Adjust rollover to the interval boundary.
#appender.debug.policies.time.modulate	= true

# 9.1.17.1 SizeBased Triggering Policy.
appender.debug.policies.size.type	= SizeBasedTriggeringPolicy
appender.debug.policies.size.size	= 2MB

# 9.1.17.2 Rollover Strategies. Accepts %d and/or %i in filePattern.
appender.debug.strategy.type		= DefaultRolloverStrategy
# Follow the Fixed Window Strategy: *.log.1 is newer than *.log.2
appender.debug.strategy.fileIndex	= min
# The eventual number of the archived logfiles (default: 7).
appender.debug.strategy.max		= 5

# Error {{{2
appender.error.type			= RollingFile
appender.error.name			= ErrorFile
appender.error.fileName			= ${errorName}
appender.error.append			= true
appender.error.bufferedIO		= true
appender.error.filePattern		= ${dirName}/error.log.%i.gz
appender.error.filePermissions		= ${permissions}
appender.error.layout.type		= PatternLayout
appender.error.layout.pattern		= ${pattern}
appender.error.policies.type		= Policies
appender.error.policies.size.type	= SizeBasedTriggeringPolicy
appender.error.policies.size.size	= 2MB
appender.error.strategy.type		= DefaultRolloverStrategy
appender.error.strategy.fileIndex	= min
appender.error.strategy.max		= 5
appender.error.filter.threshold.type	= ThresholdFilter
appender.error.filter.threshold.level	= error

# }}}1
# Loggers {{{1

loggers		= debug

# Debug {{{2
# Match the package structure.
logger.debug.name			= org.example.zzzyxwvut.armaria
logger.debug.level			= debug
# Inhibit the event propagation to the logger's parents, if any.
logger.debug.additivity			= false
logger.debug.appenderRefs		= error, debug
# Route the LogEvent to a referenced appender.
logger.debug.appenderRef.error.ref	= ErrorFile
logger.debug.appenderRef.debug.ref	= DebugFile

# }}}1
# Root Logger {{{1

# 5.1.5.4; 16.1.4 A LoggerConfig.
# Override the default root logger: error, CONSOLE.
rootLogger.level			= debug
rootLogger.appenderRefs			= root
rootLogger.appenderRef.root.ref		= STDOUT

